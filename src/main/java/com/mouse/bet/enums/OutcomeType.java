package com.mouse.bet.enums;

public enum OutcomeType {
    // Match Result outcomes
    HOME("HOME",MarketCategory.MATCH_RESULT),
    DRAW("DRAW", MarketCategory.MATCH_RESULT),
    AWAY("AWAY", MarketCategory.MATCH_RESULT),

    // Double Chance outcomes
    HOME_OR_DRAW("HOME_OR_DRAW", MarketCategory.DOUBLE_CHANCE),
    HOME_OR_AWAY("HOME_OR_AWAY", MarketCategory.DOUBLE_CHANCE),
    DRAW_OR_AWAY("DRAW_OR_AWAY", MarketCategory.DOUBLE_CHANCE),

    // Over/Under outcomes
    OVER_0_5("OVER_0.5", MarketCategory.OVER_UNDER_TOTAL),
    UNDER_0_5("UNDER_0.5", MarketCategory.OVER_UNDER_TOTAL),
    OVER_1_5("OVER_1.5", MarketCategory.OVER_UNDER_TOTAL),
    UNDER_1_5("UNDER_1.5", MarketCategory.OVER_UNDER_TOTAL),
    OVER_2_5("OVER_2.5", MarketCategory.OVER_UNDER_TOTAL),
    UNDER_2_5("UNDER_2.5", MarketCategory.OVER_UNDER_TOTAL),
    OVER_3_5("OVER_3.5", MarketCategory.OVER_UNDER_TOTAL),
    UNDER_3_5("UNDER_3.5", MarketCategory.OVER_UNDER_TOTAL),
    OVER_4_5("OVER_4.5", MarketCategory.OVER_UNDER_TOTAL),
    UNDER_4_5("UNDER_4.5", MarketCategory.OVER_UNDER_TOTAL),

    // BTTS outcomes
    BOTH_TEAMS_TO_SCORE_YES("BOTH_TEAMS_TO_SCORE_YES", MarketCategory.BTTS),
    BOTH_TEAMS_TO_SCORE_NO("BOTH_TEAMS_TO_SCORE_NO", MarketCategory.BTTS),
    HOME_DNB("HOME", MarketCategory.DRAW_NO_BET),
    AWAY_DNB("AWAY", MarketCategory.DRAW_NO_BET),
    ODD("ODD", MarketCategory.ODD_EVEN),
    EVEN("EVEN", MarketCategory.ODD_EVEN),

    //1ST HALF OVER/UNDER ' S
    IST_HALF_OVER_05("IST_HALF_OVER_0.5", MarketCategory.OVER_UNDER_1STHALF),

    IST_HALF_UNDER_05("IST_HALF_UNDER_0.5", MarketCategory.OVER_UNDER_1STHALF) ,

    IST_HALF_OVER_15("IST_HALF_OVER_1.5", MarketCategory.OVER_UNDER_1STHALF),
    IST_HALF_UNDER_15("IST_HALF_UNDER_1.5", MarketCategory.OVER_UNDER_1STHALF),

    IST_HALF_OVER_25("IST_HALF_OVER_2.5", MarketCategory.OVER_UNDER_1STHALF),
    IST_HALF_UNDER_25("IST_HALF_UNDER_2.5", MarketCategory.OVER_UNDER_1STHALF),

    IST_HALF_OVER_35("IST_HALF_OVER_3.5", MarketCategory.OVER_UNDER_1STHALF),
    IST_HALF_UNDER_35("IST_HALF_UNDER_3.5", MarketCategory.OVER_UNDER_1STHALF),

    IST_HALF_OVER_45("IST_HALF_OVER_4.5", MarketCategory.OVER_UNDER_1STHALF),
    IST_HALF_UNDER_45("IST_HALF_UNDER_4.5", MarketCategory.OVER_UNDER_1STHALF),

    IST_HALF_OVER_55("IST_HALF_OVER_5.5", MarketCategory.OVER_UNDER_1STHALF),
    IST_HALF_UNDER_55("IST_HALF_UNDER_5.5", MarketCategory.OVER_UNDER_1STHALF),
    SECOND_HALF_OVER_05("SECOND_HALF_OVER_0.5", MarketCategory.OVER_UNDER_2NDHALF),
    SECOND_HALF_UNDER_05("SECOND_HALF_UNDER_0.5", MarketCategory.OVER_UNDER_2NDHALF),

    SECOND_HALF_OVER_15("SECOND_HALF_OVER_1.5", MarketCategory.OVER_UNDER_2NDHALF),
    SECOND_HALF_UNDER_15("SECOND_HALF_UNDER_1.5", MarketCategory.OVER_UNDER_2NDHALF),

    SECOND_HALF_OVER_25("SECOND_HALF_OVER_2.5", MarketCategory.OVER_UNDER_2NDHALF),
    SECOND_HALF_UNDER_25("SECOND_HALF_UNDER_2.5", MarketCategory.OVER_UNDER_2NDHALF),

    SECOND_HALF_OVER_35("SECOND_HALF_OVER_3.5", MarketCategory.OVER_UNDER_2NDHALF),
    SECOND_HALF_UNDER_35("SECOND_HALF_UNDER_3.5", MarketCategory.OVER_UNDER_2NDHALF),

    SECOND_HALF_OVER_45("SECOND_HALF_OVER_4.5", MarketCategory.OVER_UNDER_2NDHALF),
    SECOND_HALF_UNDER_45("SECOND_HALF_UNDER_4.5", MarketCategory.OVER_UNDER_2NDHALF),

    SECOND_HALF_OVER_55("SECOND_HALF_OVER_5.5", MarketCategory.OVER_UNDER_2NDHALF),
    SECOND_HALF_UNDER_55("SECOND_HALF_UNDER_5.5", MarketCategory.OVER_UNDER_2NDHALF),
    ASIAN_HANDICAP_HOME_MINUS_025("ASIAN_HANDICAP_HOME_-0.25", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_025("ASIAN_HANDICAP_AWAY_+0.25", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_05("ASIAN_HANDICAP_HOME_-0.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_05("ASIAN_HANDICAP_AWAY_+0.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_075("ASIAN_HANDICAP_HOME_-0.75", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_075("ASIAN_HANDICAP_AWAY_+0.75", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_10("ASIAN_HANDICAP_HOME_-1.0", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_10("ASIAN_HANDICAP_AWAY_+1.0", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_125("ASIAN_HANDICAP_HOME_-1.25", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_125("ASIAN_HANDICAP_AWAY_+1.25", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_15("ASIAN_HANDICAP_HOME_-1.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_15("ASIAN_HANDICAP_AWAY_+1.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_175("ASIAN_HANDICAP_HOME_-1.75", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_175("ASIAN_HANDICAP_AWAY_+1.75", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_20("ASIAN_HANDICAP_HOME_-2.0", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_20("ASIAN_HANDICAP_AWAY_+2.0", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_225("ASIAN_HANDICAP_HOME_-2.25", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_225("ASIAN_HANDICAP_AWAY_+2.25", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_25("ASIAN_HANDICAP_HOME_-2.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_25("ASIAN_HANDICAP_AWAY_+2.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_275("ASIAN_HANDICAP_HOME_-2.75", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_275("ASIAN_HANDICAP_AWAY_+2.75", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_30("ASIAN_HANDICAP_HOME_-3.0", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_30("ASIAN_HANDICAP_AWAY_+3.0", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_325("ASIAN_HANDICAP_HOME_-3.25", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_325("ASIAN_HANDICAP_AWAY_+3.25", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    ASIAN_HANDICAP_HOME_MINUS_35("ASIAN_HANDICAP_HOME_-3.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_35("ASIAN_HANDICAP_AWAY_+3.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_HOME_MINUS_45("ASIAN_HANDICAP_HOME_-4.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),
    ASIAN_HANDICAP_AWAY_PLUS_45("ASIAN_HANDICAP_AWAY_+4.5", MarketCategory.ASIAN_HANDICAP_FULLTIME),

    CORNERS_OVER_65("CORNERS_OVER_6.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),
    CORNERS_UNDER_65("CORNERS_UNDER_6.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),

    CORNERS_OVER_75("CORNERS_OVER_7.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),
    CORNERS_UNDER_75("CORNERS_UNDER_7.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),

    CORNERS_OVER_85("CORNERS_OVER_8.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),
    CORNERS_UNDER_85("CORNERS_UNDER_8.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),

    CORNERS_OVER_95("CORNERS_OVER_9.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),
    CORNERS_UNDER_95("CORNERS_UNDER_9.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),

    CORNERS_OVER_105("CORNERS_OVER_10.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),
    CORNERS_UNDER_105("CORNERS_UNDER_10.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),

    CORNERS_OVER_115("CORNERS_OVER_11.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),
    CORNERS_UNDER_115("CORNERS_UNDER_11.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),

    CORNERS_OVER_125("CORNERS_OVER_12.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),
    CORNERS_UNDER_125("CORNERS_UNDER_12.5", MarketCategory.CORNERS_OVER_UNDER_FULLTIME),
    UNKNOWN("UNKNOWN", null);

    private final String normalizedName;
    private final MarketCategory category;
    private OutcomeType opposite;

    static {
        // Setup opposite outcomes
        HOME.opposite = null; // No direct opposite for Home
        AWAY.opposite = null; // No direct opposite  for away

        DRAW.opposite = HOME_OR_AWAY;

        OVER_0_5.opposite = UNDER_0_5;
        UNDER_0_5.opposite = OVER_0_5;
        OVER_1_5.opposite = UNDER_1_5;
        UNDER_1_5.opposite = OVER_1_5;
        OVER_2_5.opposite = UNDER_2_5;
        UNDER_2_5.opposite = OVER_2_5;
        OVER_3_5.opposite = UNDER_3_5;
        UNDER_3_5.opposite = OVER_3_5;
        OVER_4_5.opposite = UNDER_4_5;
        UNDER_4_5.opposite = OVER_4_5;

        BOTH_TEAMS_TO_SCORE_YES.opposite = BOTH_TEAMS_TO_SCORE_NO;
        BOTH_TEAMS_TO_SCORE_NO.opposite = BOTH_TEAMS_TO_SCORE_YES;

        HOME_OR_DRAW.opposite = null;
        HOME_OR_AWAY.opposite = DRAW;
        DRAW_OR_AWAY.opposite = null;
        AWAY_DNB.opposite = HOME_DNB;
        HOME_DNB.opposite = AWAY_DNB;
        ODD.opposite = EVEN;
        EVEN.opposite = ODD;

        IST_HALF_OVER_05.opposite = IST_HALF_UNDER_05;
        IST_HALF_UNDER_05.opposite = IST_HALF_OVER_05;
        IST_HALF_OVER_15.opposite = IST_HALF_UNDER_15;
        IST_HALF_UNDER_15.opposite = IST_HALF_OVER_15;
        IST_HALF_OVER_25.opposite = IST_HALF_UNDER_25;
        IST_HALF_UNDER_25.opposite = IST_HALF_OVER_25;
        IST_HALF_OVER_35.opposite = IST_HALF_UNDER_35;
        IST_HALF_UNDER_35.opposite = IST_HALF_OVER_35;
        IST_HALF_OVER_45.opposite = IST_HALF_UNDER_45;
        IST_HALF_UNDER_45.opposite = IST_HALF_OVER_45;
        IST_HALF_OVER_55.opposite = IST_HALF_UNDER_55;
        IST_HALF_UNDER_55.opposite = IST_HALF_OVER_55;

        SECOND_HALF_OVER_05.opposite = SECOND_HALF_UNDER_05;
        SECOND_HALF_UNDER_05.opposite = SECOND_HALF_OVER_05;
        SECOND_HALF_OVER_15.opposite = SECOND_HALF_UNDER_15;
        SECOND_HALF_UNDER_15.opposite = SECOND_HALF_OVER_15;
        SECOND_HALF_OVER_25.opposite = SECOND_HALF_UNDER_25;
        SECOND_HALF_UNDER_25.opposite = SECOND_HALF_OVER_25;
        SECOND_HALF_OVER_35.opposite = SECOND_HALF_UNDER_35;
        SECOND_HALF_UNDER_35.opposite = SECOND_HALF_OVER_35;
        SECOND_HALF_OVER_45.opposite = SECOND_HALF_UNDER_45;
        SECOND_HALF_UNDER_45.opposite = SECOND_HALF_OVER_45;
        SECOND_HALF_OVER_55.opposite = SECOND_HALF_UNDER_55;
        SECOND_HALF_UNDER_55.opposite = SECOND_HALF_OVER_55;

        ASIAN_HANDICAP_HOME_MINUS_025.opposite = ASIAN_HANDICAP_AWAY_PLUS_025;
        ASIAN_HANDICAP_AWAY_PLUS_025.opposite = ASIAN_HANDICAP_HOME_MINUS_025;

        ASIAN_HANDICAP_HOME_MINUS_05.opposite = ASIAN_HANDICAP_AWAY_PLUS_05;
        ASIAN_HANDICAP_AWAY_PLUS_05.opposite = ASIAN_HANDICAP_HOME_MINUS_05;

        ASIAN_HANDICAP_HOME_MINUS_075.opposite = ASIAN_HANDICAP_AWAY_PLUS_075;
        ASIAN_HANDICAP_AWAY_PLUS_075.opposite = ASIAN_HANDICAP_HOME_MINUS_075;

        ASIAN_HANDICAP_HOME_MINUS_10.opposite = ASIAN_HANDICAP_AWAY_PLUS_10;
        ASIAN_HANDICAP_AWAY_PLUS_10.opposite = ASIAN_HANDICAP_HOME_MINUS_10;

        ASIAN_HANDICAP_HOME_MINUS_125.opposite = ASIAN_HANDICAP_AWAY_PLUS_125;
        ASIAN_HANDICAP_AWAY_PLUS_125.opposite = ASIAN_HANDICAP_HOME_MINUS_125;

        ASIAN_HANDICAP_HOME_MINUS_15.opposite = ASIAN_HANDICAP_AWAY_PLUS_15;
        ASIAN_HANDICAP_AWAY_PLUS_15.opposite = ASIAN_HANDICAP_HOME_MINUS_15;

        ASIAN_HANDICAP_HOME_MINUS_175.opposite = ASIAN_HANDICAP_AWAY_PLUS_175;
        ASIAN_HANDICAP_AWAY_PLUS_175.opposite = ASIAN_HANDICAP_HOME_MINUS_175;

        ASIAN_HANDICAP_HOME_MINUS_20.opposite = ASIAN_HANDICAP_AWAY_PLUS_20;
        ASIAN_HANDICAP_AWAY_PLUS_20.opposite = ASIAN_HANDICAP_HOME_MINUS_20;

        ASIAN_HANDICAP_HOME_MINUS_225.opposite = ASIAN_HANDICAP_AWAY_PLUS_225;
        ASIAN_HANDICAP_AWAY_PLUS_225.opposite = ASIAN_HANDICAP_HOME_MINUS_225;

        ASIAN_HANDICAP_HOME_MINUS_25.opposite = ASIAN_HANDICAP_AWAY_PLUS_25;
        ASIAN_HANDICAP_AWAY_PLUS_25.opposite = ASIAN_HANDICAP_HOME_MINUS_25;

        ASIAN_HANDICAP_HOME_MINUS_275.opposite = ASIAN_HANDICAP_AWAY_PLUS_275;
        ASIAN_HANDICAP_AWAY_PLUS_275.opposite = ASIAN_HANDICAP_HOME_MINUS_275;

        ASIAN_HANDICAP_HOME_MINUS_30.opposite = ASIAN_HANDICAP_AWAY_PLUS_30;
        ASIAN_HANDICAP_AWAY_PLUS_30.opposite = ASIAN_HANDICAP_HOME_MINUS_30;

        ASIAN_HANDICAP_HOME_MINUS_325.opposite = ASIAN_HANDICAP_AWAY_PLUS_325;
        ASIAN_HANDICAP_AWAY_PLUS_325.opposite = ASIAN_HANDICAP_HOME_MINUS_325;

        ASIAN_HANDICAP_HOME_MINUS_35.opposite = ASIAN_HANDICAP_AWAY_PLUS_35;
        ASIAN_HANDICAP_AWAY_PLUS_35.opposite = ASIAN_HANDICAP_HOME_MINUS_35;
        ASIAN_HANDICAP_HOME_MINUS_45.opposite = ASIAN_HANDICAP_AWAY_PLUS_45;
        ASIAN_HANDICAP_AWAY_PLUS_45.opposite = ASIAN_HANDICAP_HOME_MINUS_45;


        CORNERS_OVER_75.opposite = CORNERS_UNDER_75;
        CORNERS_UNDER_75.opposite = CORNERS_OVER_75;

        CORNERS_OVER_85.opposite = CORNERS_UNDER_85;
        CORNERS_UNDER_85.opposite = CORNERS_OVER_85;

        CORNERS_OVER_95.opposite = CORNERS_UNDER_95;
        CORNERS_UNDER_95.opposite = CORNERS_OVER_95;

        CORNERS_OVER_105.opposite = CORNERS_UNDER_105;
        CORNERS_UNDER_105.opposite = CORNERS_OVER_105;

        CORNERS_OVER_115.opposite = CORNERS_UNDER_115;
        CORNERS_UNDER_115.opposite = CORNERS_OVER_115;

        CORNERS_OVER_125.opposite = CORNERS_UNDER_125;
        CORNERS_UNDER_125.opposite = CORNERS_OVER_125;

    }

    OutcomeType(String normalizedName, MarketCategory category) {
        this.normalizedName = normalizedName;
        this.category = category;
    }

    public String getNormalizedName() {
        return normalizedName;
    }

    public MarketCategory getCategory() {
        return category;
    }

    public OutcomeType getOpposite() {
        return opposite;
    }

    public boolean hasOpposite() {
        return opposite != null;
    }

    public static OutcomeType fromNormalizedName(String normalizedName) {
        for (OutcomeType type : values()) {
            if (type.normalizedName.equalsIgnoreCase(normalizedName)) {
                return type;
            }
        }
        return UNKNOWN;
    }
}
